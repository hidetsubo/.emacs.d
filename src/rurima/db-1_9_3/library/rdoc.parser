requires=rdoc.context,rdoc.constant,rdoc,rdoc.stats,rdoc.anon_class,rdoc.top_level,rdoc.normal_class,rdoc.alias,rdoc.normal_module,rdoc.any_method,rdoc.code_object,rdoc.meta_method,rdoc.single_class,rdoc.ghost_method,rdoc.attr,rdoc.require,rdoc.code_objects,rdoc.class_module,rdoc.parser,rdoc.parser.simple,rdoc.include
category=
methods=
sublibraries=rdoc.parser.ruby_tools,rdoc.parser.ruby,rdoc.parser.simple,rdoc.parser.c
classes=RDoc=Parser
is_sublibrary=true

rdoc で解析できるファイルの種類を追加するためのサブライブラリです。

以下のメソッドを定義したクラスを作成する事で、新しいパーサクラスを作成
する事ができます。

 * #initialize(top_level, file_name, body, options, stats)
 * #scan

initialize メソッドは以下の引数を受け取ります。

 * top_level [[c:RDoc::TopLevel]] オブジェクトを指定します。
 * file_name: file_name ファイル名を文字列で指定します。
 * body: ソースコードの内容を文字列で指定します。
 * options: [[c:RDoc::Options]] オブジェクトを指定します。
 * stats: [[c:RDoc::Stats]] オブジェクトを指定します。

scan メソッドは引数を受け取りません。処理の後は必ず
[[c:RDoc::TopLevel]] オブジェクトを返す必要があります。

また、[[c:RDoc::Parser]] はファイル名からパーサクラスを取得するのにも使
われます。このために、新しく作成するパーサクラスでは [[c:RDoc::Parser]]
を継承し、parse_files_matching メソッドで自身が解析できるファイル名のパ
ターンを登録しておく必要があります。

例:

  require "rdoc/parser"
  
  class RDoc::Parser::Xyz < RDoc::Parser
    parse_files_matching /\.xyz$/
  
    def initialize(file_name, body, options)
      ...
    end
  
    def scan
      ...
    end
  end
